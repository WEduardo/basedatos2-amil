SET SERVEROUTPUT ON;

CREATE TABLE clientes (ID_cliente INTEGER, nombre VARCHAR2(80), telefono VARCHAR2(70),
CONSTRAINT PK_ID_cliente8 PRIMARY KEY (ID_cliente));

CREATE SEQUENCE sec_cliente
START WITH 1
INCREMENT BY 1
nomaxvalue;

CREATE OR REPLACE PROCEDURE generar_cliente (MY_ID OUT INTEGER, MY_NOMBRE IN VARCHAR2, MY_TELEFONO IN VARCHAR2)
AS
BEGIN
SELECT sec_cliente.NEXTVAL INTO MY_ID FROM DUAL;
INSERT INTO clientes(ID_cliente, NOMBRE, TELEFONO) VALUES(MY_ID, MY_NOMBRE, MY_TELEFONO);
END;
/

CREATE TABLE ordenes (ID_orden INTEGER, ID_cliente INTEGER, total FLOAT,
CONSTRAINT PK_ID_orden PRIMARY KEY (ID_orden),
CONSTRAINT FK_ID_cliente9 FOREIGN KEY (ID_cliente) REFERENCES clientes (ID_Cliente));

CREATE SEQUENCE sec_orden
START WITH 1
INCREMENT BY 1
nomaxvalue;

CREATE OR REPLACE PROCEDURE generar_orden (MY_ID OUT INTEGER, MY_cliente IN INTEGER, MY_total IN FLOAT)
AS
BEGIN
SELECT sec_orden.NEXTVAL INTO MY_ID FROM DUAL;
INSERT INTO ordenes(ID_orden, ID_cliente, total) VALUES(MY_ID, MY_cliente, MY_total);
END;
/

SELECT * FROM clientes;

DECLARE
valor_id INTEGER;
BEGIN
FOR i IN 1..10 LOOP
generar_cliente(valor_id,dbms_random.string('l',8),'01-800-xxx');
dbms_output.PUT_LINE('Se insertó con exito '||valor_id);
END LOOP;
END;
/

SELECT * FROM ordenes;
DELETE FROM ordenes;

DECLARE
id_orden INTEGER;
id_cliente INTEGER;
CURSOR cursor_ordenes IS SELECT * FROM clientes;
BEGIN
--id_cliente := 1;
FOR rec IN cursor_ordenes LOOP
FOR x IN 1..3 LOOP
generar_orden(id_orden,rec.id_cliente,round(dbms_random.value(120,600)));
--dbms_output.PUT_LINE('Se insertó con exito '||id_orden);
END LOOP;
END LOOP;
END;
/
